# Generated by Django 5.0.9 on 2025-09-11 08:33

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('company', '0003_company_widget_is_active_company_widget_position_and_more'),
        ('django_ai_assistant', '0006_thread_assistant_id'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='WebsiteSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.UUIDField(default=uuid.uuid4, help_text='Unique identifier for this widget session', unique=True, verbose_name='Session ID')),
                ('status', models.CharField(choices=[('active', 'Active'), ('closed', 'Closed'), ('expired', 'Expired')], default='active', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='Last Activity')),
                ('closed_at', models.DateTimeField(blank=True, null=True, verbose_name='Closed At')),
                ('visitor_ip', models.GenericIPAddressField(help_text='IP address of the website visitor', verbose_name='Visitor IP')),
                ('user_agent', models.TextField(blank=True, help_text='Browser user agent string', verbose_name='User Agent')),
                ('referrer_url', models.URLField(blank=True, help_text='URL that referred the visitor to the chat', verbose_name='Referrer URL')),
                ('visitor_metadata', models.JSONField(blank=True, default=dict, help_text='Additional visitor information (screen resolution, timezone, etc.)', verbose_name='Visitor Metadata')),
                ('company', models.ForeignKey(help_text='Company whose website this session belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='website_sessions', to='company.company')),
                ('thread', models.OneToOneField(help_text='Associated AI conversation thread', on_delete=django.db.models.deletion.CASCADE, related_name='website_session', to='django_ai_assistant.thread')),
            ],
            options={
                'verbose_name': 'Website Session',
                'verbose_name_plural': 'Website Sessions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SessionHandover',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('requested', 'Requested'), ('assigned', 'Assigned'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='requested', max_length=20, verbose_name='Status')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10, verbose_name='Priority')),
                ('requested_at', models.DateTimeField(auto_now_add=True, verbose_name='Requested At')),
                ('assigned_at', models.DateTimeField(blank=True, null=True, verbose_name='Assigned At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('reason', models.TextField(help_text='Why this session needs human intervention', verbose_name='Handover Reason')),
                ('notes', models.TextField(blank=True, help_text='Notes from the human agent', verbose_name='Agent Notes')),
                ('customer_rating', models.IntegerField(blank=True, help_text='Customer satisfaction rating (1-5)', null=True, verbose_name='Customer Rating')),
                ('customer_feedback', models.TextField(blank=True, help_text='Customer feedback about the handover experience', verbose_name='Customer Feedback')),
                ('assigned_agent', models.ForeignKey(blank=True, help_text='Human agent assigned to handle this session', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_handovers', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(help_text='Website session requesting handover', on_delete=django.db.models.deletion.CASCADE, related_name='handovers', to='widget.websitesession')),
            ],
            options={
                'verbose_name': 'Session Handover',
                'verbose_name_plural': 'Session Handovers',
                'ordering': ['-requested_at'],
            },
        ),
        migrations.AddIndex(
            model_name='websitesession',
            index=models.Index(fields=['company', 'status'], name='widget_webs_company_432222_idx'),
        ),
        migrations.AddIndex(
            model_name='websitesession',
            index=models.Index(fields=['created_at'], name='widget_webs_created_6b4646_idx'),
        ),
        migrations.AddIndex(
            model_name='websitesession',
            index=models.Index(fields=['visitor_ip'], name='widget_webs_visitor_ce4cbf_idx'),
        ),
        migrations.AddIndex(
            model_name='sessionhandover',
            index=models.Index(fields=['status', 'priority'], name='widget_sess_status_8ab6c6_idx'),
        ),
        migrations.AddIndex(
            model_name='sessionhandover',
            index=models.Index(fields=['assigned_agent', 'status'], name='widget_sess_assigne_e2d055_idx'),
        ),
        migrations.AddIndex(
            model_name='sessionhandover',
            index=models.Index(fields=['requested_at'], name='widget_sess_request_3566f4_idx'),
        ),
    ]
