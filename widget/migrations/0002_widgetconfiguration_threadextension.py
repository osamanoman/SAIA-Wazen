# Generated by Django 5.0.9 on 2025-09-12 20:28

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('company', '0003_company_widget_is_active_company_widget_position_and_more'),
        ('django_ai_assistant', '0006_thread_assistant_id'),
        ('widget', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='WidgetConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme_config', models.JSONField(default=dict, help_text='Theme configuration (colors, fonts, etc.)', verbose_name='Theme Configuration')),
                ('welcome_message', models.TextField(default='Hello! How can we help you today?', help_text='Initial message shown to website visitors', verbose_name='Welcome Message')),
                ('position', models.CharField(choices=[('bottom-right', 'Bottom Right'), ('bottom-left', 'Bottom Left'), ('top-right', 'Top Right'), ('top-left', 'Top Left')], default='bottom-right', help_text='Position of the widget on the website', max_length=20, verbose_name='Widget Position')),
                ('auto_open', models.BooleanField(default=False, help_text='Whether to automatically open the widget', verbose_name='Auto Open')),
                ('auto_open_delay', models.IntegerField(default=3, help_text='Delay in seconds before auto-opening (0-60)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)], verbose_name='Auto Open Delay')),
                ('rate_limit_per_minute', models.IntegerField(default=20, help_text='Maximum messages per minute per visitor', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)], verbose_name='Rate Limit Per Minute')),
                ('max_message_length', models.IntegerField(default=2000, help_text='Maximum length of a single message', validators=[django.core.validators.MinValueValidator(100), django.core.validators.MaxValueValidator(10000)], verbose_name='Max Message Length')),
                ('allowed_file_types', models.JSONField(default=list, help_text="List of allowed file extensions (e.g., ['pdf', 'jpg', 'png'])", verbose_name='Allowed File Types')),
                ('max_file_size_mb', models.IntegerField(default=5, help_text='Maximum file size in megabytes', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)], verbose_name='Max File Size (MB)')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the widget is active and visible', verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('company', models.OneToOneField(help_text='Company this configuration belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='widget_config', to='company.company')),
            ],
            options={
                'verbose_name': 'Widget Configuration',
                'verbose_name_plural': 'Widget Configurations',
                'ordering': ['company__name'],
            },
        ),
        migrations.CreateModel(
            name='ThreadExtension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_type', models.CharField(choices=[('admin', 'Admin Chat'), ('website', 'Website Chat')], default='admin', help_text='Type of chat session (admin vs website)', max_length=20, verbose_name='Session Type')),
                ('is_anonymous', models.BooleanField(default=False, help_text='Whether this is an anonymous visitor session', verbose_name='Is Anonymous')),
                ('visitor_metadata', models.JSONField(blank=True, default=dict, help_text='Additional visitor information for anonymous sessions', verbose_name='Visitor Metadata')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('thread', models.OneToOneField(help_text='Reference to the base Thread model', on_delete=django.db.models.deletion.CASCADE, related_name='chatbot_extension', to='django_ai_assistant.thread')),
            ],
            options={
                'verbose_name': 'Thread Extension',
                'verbose_name_plural': 'Thread Extensions',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['session_type'], name='widget_thre_session_f1d1ee_idx'), models.Index(fields=['is_anonymous'], name='widget_thre_is_anon_74a1b2_idx'), models.Index(fields=['created_at'], name='widget_thre_created_0d7071_idx')],
            },
        ),
    ]
