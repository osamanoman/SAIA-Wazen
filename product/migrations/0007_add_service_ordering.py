# Generated by Django 5.0.9 on 2025-09-07 21:20

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('company', '0002_add_ai_configuration'),
        ('product', '0006_populate_slugs'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='product',
            name='is_service_orderable',
            field=models.BooleanField(default=False, help_text='Whether this service can be ordered through the AI assistant', verbose_name='Service Orderable'),
        ),
        migrations.AddField(
            model_name='product',
            name='requires_customer_info',
            field=models.BooleanField(default=True, help_text='Whether this service requires customer information collection', verbose_name='Requires Customer Info'),
        ),
        migrations.AddField(
            model_name='product',
            name='service_description',
            field=models.TextField(blank=True, help_text='Detailed description of the service for AI assistant', null=True, verbose_name='Service Description'),
        ),
        migrations.AlterField(
            model_name='product',
            name='type',
            field=models.CharField(choices=[('product', 'Product'), ('service', 'Service'), ('none', 'None')], default='none', max_length=100, verbose_name='Product Type'),
        ),
        migrations.CreateModel(
            name='ServiceOrder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the service order', primary_key=True, serialize=False)),
                ('customer_name', models.CharField(help_text='Full name of the customer', max_length=255, verbose_name='Customer Name')),
                ('customer_age', models.PositiveIntegerField(help_text='Age of the customer', verbose_name='Customer Age')),
                ('customer_id', models.CharField(help_text='Customer identification number', max_length=50, verbose_name='Customer ID')),
                ('customer_image', models.ImageField(blank=True, help_text='Customer personal image (optional)', null=True, upload_to='service_orders/customer_images/', verbose_name='Customer Image')),
                ('order_notes', models.TextField(blank=True, help_text='Additional notes or requirements for the order', null=True, verbose_name='Order Notes')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='under_review', help_text='Current status of the service order', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the order was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the order was last updated')),
                ('confirmed_at', models.DateTimeField(blank=True, help_text='When the customer confirmed the order data', null=True)),
                ('ai_session_data', models.JSONField(blank=True, default=dict, help_text='Metadata from the AI assistant session', verbose_name='AI Session Data')),
                ('company', models.ForeignKey(help_text='Company this order belongs to', on_delete=django.db.models.deletion.CASCADE, to='company.company')),
                ('created_by', models.ForeignKey(help_text='User who created this order', on_delete=django.db.models.deletion.CASCADE, related_name='service_orders', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(help_text='Service being ordered', limit_choices_to={'is_service_orderable': True, 'type': 'service'}, on_delete=django.db.models.deletion.CASCADE, to='product.product')),
            ],
            options={
                'verbose_name': 'Service Order',
                'verbose_name_plural': 'Service Orders',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['company', 'status'], name='product_ser_company_f8b0a1_idx'), models.Index(fields=['created_by', 'status'], name='product_ser_created_d08d88_idx'), models.Index(fields=['customer_id'], name='product_ser_custome_8baf5b_idx'), models.Index(fields=['created_at'], name='product_ser_created_828b40_idx')],
            },
        ),
        migrations.CreateModel(
            name='ServiceOrderCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(help_text='Unique session identifier for caching', max_length=255, unique=True, verbose_name='Session Key')),
                ('cached_data', models.JSONField(default=dict, help_text='Temporarily stored customer information', verbose_name='Cached Data')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this cache entry was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this cache entry was last updated')),
                ('expires_at', models.DateTimeField(help_text='When this cache entry expires')),
                ('company', models.ForeignKey(help_text='Company this cache entry belongs to', on_delete=django.db.models.deletion.CASCADE, to='company.company')),
                ('service', models.ForeignKey(blank=True, help_text='Service being ordered (if selected)', limit_choices_to={'is_service_orderable': True, 'type': 'service'}, null=True, on_delete=django.db.models.deletion.CASCADE, to='product.product')),
                ('user', models.ForeignKey(help_text='User associated with this cache entry', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Service Order Cache',
                'verbose_name_plural': 'Service Order Cache',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['session_key'], name='product_ser_session_1cc3af_idx'), models.Index(fields=['user', 'company'], name='product_ser_user_id_ce5289_idx'), models.Index(fields=['expires_at'], name='product_ser_expires_a645d7_idx')],
            },
        ),
    ]
