# Generated by Django 5.0.9 on 2025-09-11 07:49

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('company', '0003_company_widget_is_active_company_widget_position_and_more'),
        ('django_ai_assistant', '0006_thread_assistant_id'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='WebsiteSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.UUIDField(default=uuid.uuid4, help_text='Unique identifier for the website visitor session', unique=True)),
                ('visitor_ip', models.GenericIPAddressField(help_text='IP address of the website visitor')),
                ('user_agent', models.TextField(blank=True, help_text='Browser user agent string')),
                ('referrer_url', models.URLField(blank=True, help_text='URL that referred the visitor to the chat', null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('closed', 'Closed'), ('handover', 'Agent Handover'), ('archived', 'Archived')], default='active', help_text='Current status of the chat session', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the session was created')),
                ('last_activity', models.DateTimeField(auto_now=True, help_text='Last activity timestamp (updated on each message)')),
                ('closed_at', models.DateTimeField(blank=True, help_text='When the session was closed', null=True)),
                ('visitor_metadata', models.JSONField(blank=True, default=dict, help_text='Additional visitor information (browser, screen size, etc.)')),
                ('company', models.ForeignKey(help_text='Company this session belongs to (for data isolation)', on_delete=django.db.models.deletion.CASCADE, related_name='website_sessions', to='company.company')),
                ('thread', models.OneToOneField(help_text='Associated conversation thread', on_delete=django.db.models.deletion.CASCADE, related_name='website_session', to='django_ai_assistant.thread')),
            ],
            options={
                'verbose_name': 'Website Chat Session',
                'verbose_name_plural': 'Website Chat Sessions',
                'db_table': 'project_website_sessions',
                'ordering': ['-last_activity'],
            },
        ),
        migrations.CreateModel(
            name='SessionHandover',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('handover_reason', models.TextField(help_text='Reason for handover (e.g., complex query, customer request)')),
                ('handover_trigger', models.CharField(choices=[('ai_escalation', 'AI Escalation'), ('customer_request', 'Customer Request'), ('agent_initiated', 'Agent Initiated'), ('timeout', 'Session Timeout')], default='ai_escalation', help_text='What triggered the handover', max_length=50)),
                ('status', models.CharField(choices=[('pending', 'Pending Agent Response'), ('active', 'Agent Active'), ('resolved', 'Resolved'), ('escalated', 'Escalated Further')], default='pending', help_text='Current handover status', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When handover was initiated')),
                ('agent_joined_at', models.DateTimeField(blank=True, help_text='When agent joined the conversation', null=True)),
                ('resolved_at', models.DateTimeField(blank=True, help_text='When handover was resolved', null=True)),
                ('resolution_notes', models.TextField(blank=True, help_text='Agent notes about the resolution')),
                ('customer_satisfaction', models.IntegerField(blank=True, help_text='Customer satisfaction rating (1-5)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('agent', models.ForeignKey(help_text='Support agent handling the handover', on_delete=django.db.models.deletion.CASCADE, related_name='chat_handovers', to=settings.AUTH_USER_MODEL)),
                ('website_session', models.ForeignKey(help_text='Website session being handed over to an agent', on_delete=django.db.models.deletion.CASCADE, related_name='handovers', to='project.websitesession')),
            ],
            options={
                'verbose_name': 'Session Handover',
                'verbose_name_plural': 'Session Handovers',
                'db_table': 'project_session_handovers',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='websitesession',
            index=models.Index(fields=['company', 'status'], name='project_company_status_idx'),
        ),
        migrations.AddIndex(
            model_name='websitesession',
            index=models.Index(fields=['created_at'], name='project_created_at_idx'),
        ),
        migrations.AddIndex(
            model_name='websitesession',
            index=models.Index(fields=['last_activity'], name='project_last_activity_idx'),
        ),
        migrations.AddIndex(
            model_name='websitesession',
            index=models.Index(fields=['session_id'], name='project_session_id_idx'),
        ),
        migrations.AddIndex(
            model_name='sessionhandover',
            index=models.Index(fields=['website_session', 'status'], name='project_handover_sess_idx'),
        ),
        migrations.AddIndex(
            model_name='sessionhandover',
            index=models.Index(fields=['agent', 'status'], name='project_handover_agent_idx'),
        ),
        migrations.AddIndex(
            model_name='sessionhandover',
            index=models.Index(fields=['created_at'], name='project_handover_date_idx'),
        ),
    ]
